<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>BensiEgils â€“ Hyperv</title><link>https://lubenz007.github.io/bensiegils/tags/hyperv/</link><description>Recent content in Hyperv on BensiEgils</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 30 Sep 2023 14:00:00 +0000</lastBuildDate><atom:link href="https://lubenz007.github.io/bensiegils/tags/hyperv/index.xml" rel="self" type="application/rss+xml"/><item><title>hyper-v-tool</title><link>https://lubenz007.github.io/bensiegils/posts/2023-09-30-hyper-v-tool/</link><pubDate>Sat, 30 Sep 2023 14:00:00 +0000</pubDate><guid>https://lubenz007.github.io/bensiegils/posts/2023-09-30-hyper-v-tool/</guid><description>
&lt;p>My tool to create VMs in my lab environment with streamlined automation.&lt;/p>
&lt;p>&lt;strong>GitHub Repository:&lt;/strong> &lt;a href="https://github.com/Lubenz007/hyper-v-tool"target="_blank" rel="noopener">https://github.com/Lubenz007/hyper-v-tool&lt;/a>&lt;/p>
&lt;p>Utilizing a standalone Hyper-V server and generating VMs from a golden image might be considered an older approach, but it&amp;rsquo;s one I personally prefer. Over the years, I&amp;rsquo;ve diligently maintained a tool for crafting VMs on my Hyper-V host within the lab environment. I employ SSH to connect to the Hyper-V host and initiate the VM creation process. This tool provides a streamlined menu system that automatically configures the VM, allowing me to promptly begin using it.&lt;/p>
&lt;ul>
&lt;li>All config is done in the vm_menu.ps1&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>
&lt;p>You can find the oscdimg.exe in the Windows 11 22h2 ADK:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://learn.microsoft.com/en-us/windows-hardware/get-started/adk-install"target="_blank" rel="noopener">https://learn.microsoft.com/en-us/windows-hardware/get-started/adk-install&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Kit &amp;ldquo;C:\Program Files (x86)\Windows Kits\10\Assessment and Deployment Kit\Deployment Tools\arm64\Oscdimg&amp;rdquo;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>$global:oscdimgPath = &amp;ldquo;$global:StartupFolder\tools\oscdimg.exe&amp;rdquo;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>#Template location&lt;/p>
&lt;/li>
&lt;li>
&lt;p>$global:template = &amp;ldquo;$global:StartupFolder\template&amp;rdquo;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>#template vhd name / windows is sysprep / Ubuntu cloud-init / modify for your template.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>$global:2022core = &amp;ldquo;W2022C.vhdx&amp;rdquo;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>$global:2022stand = &amp;ldquo;W2022S_OS.vhdx&amp;rdquo;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>$global:2022data = &amp;ldquo;W2022D_OS.vhdx&amp;rdquo;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>$global:Ubuntu = &amp;ldquo;Ubuntu_OS.vhd&amp;rdquo;&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://github.com/Lubenz007/hyper-v-tool/assets/116028026/1e961bfd-aa70-41c3-96dd-6740f175d03b" alt="image" loading="lazy" />
&lt;img src="https://github.com/Lubenz007/hyper-v-tool/assets/116028026/24f16f37-738a-4a17-a990-238896e9bcb3" alt="image" loading="lazy" />
&lt;img src="https://github.com/Lubenz007/hyper-v-tool/assets/116028026/ac87298b-dd9d-4d1c-8d06-3db92c6105bf" alt="image" loading="lazy" />
&lt;img src="https://github.com/Lubenz007/hyper-v-tool/assets/116028026/817222df-cee3-40ee-8a39-740abea0b3d5" alt="image" loading="lazy" />
&lt;img src="https://github.com/Lubenz007/hyper-v-tool/assets/116028026/4e5d853f-7b6e-47ef-9827-2b0f67573578" alt="image" loading="lazy" />
&lt;img src="https://github.com/Lubenz007/hyper-v-tool/assets/116028026/9ec272c6-86e3-4c96-8b13-41ae1f15b132" alt="image" loading="lazy" />
&lt;img src="https://github.com/Lubenz007/hyper-v-tool/assets/116028026/b69fe441-64d9-4d7a-85b6-c7e80df0796a" alt="image" loading="lazy" />&lt;/p></description></item><item><title>Upgrade Hyper-V Hosts with Azure Arc</title><link>https://lubenz007.github.io/bensiegils/posts/2023-04-04-upgrade-hyper/</link><pubDate>Tue, 04 Apr 2023 22:15:00 +0000</pubDate><guid>https://lubenz007.github.io/bensiegils/posts/2023-04-04-upgrade-hyper/</guid><description>
&lt;p>Use Azure Arc to automate updates on standalone Hyper-V hosts with intelligent VM management during maintenance windows.&lt;/p>
&lt;h2>Azure Arc Hyper-V Host Management&lt;span class="hx:absolute hx:-mt-20" id="azure-arc-hyper-v-host-management">&lt;/span>
&lt;a href="#azure-arc-hyper-v-host-management" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Azure Arc is a powerful tool for managing and updating hybrid infrastructure, including standalone Hyper-V hosts. This demo shows how to use Azure Arc to update a standalone Hyper-V host, using a scheduled update task in Automation Account and pre and post scripts that shut down and start up VMs.&lt;/p>
&lt;p>Pre-requisites&lt;/p>
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Stop all running VMs on the Hyper-V host and wait for them to shut down&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># save the names of the running VMs to a file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$filePath = &lt;span style="color:#e6db74">&amp;#34;C:\temp\runningvm.txt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(Get-vm | Where-Object { $_.State &lt;span style="color:#f92672">-eq&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Running&amp;#34;&lt;/span> }).name | Out-File $filePath
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$runningvm = Get-Content $filePath
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">foreach&lt;/span> ($Name &lt;span style="color:#66d9ef">in&lt;/span> $runningvm) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Stop-VM $Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">do&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $VM1 = get-vm -Name $Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Progress -Activity &lt;span style="color:#e6db74">&amp;#34;Waiting for the VM to shutdown&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">until&lt;/span> ($Null &lt;span style="color:#f92672">-eq&lt;/span> $VM1.Heartbeat)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># send a webhook to Teams to notify that the VMs have been shut down&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$webhookUri = &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$body = @{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;@context&amp;#34;&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;http://schema.org/extensions&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;@type&amp;#34;&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;MessageCard&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;themeColor&amp;#34;&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;d70000&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;title&amp;#34;&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;Send Webhook to Teams&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;text&amp;#34;&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;This is a message sent from Powershell&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Invoke-RestMethod -Uri $webhookUri -Method Post -Body (ConvertTo-Json -InputObject $body) &lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0">
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
>
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4">&lt;/div>
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Post-requisites&lt;/p>
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Start up all VMs that were shut down during the update process&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$filePath = &lt;span style="color:#e6db74">&amp;#34;C:\temp\runningvm.txt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$runningvm = Get-Content $filePath
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">foreach&lt;/span> ($Name &lt;span style="color:#66d9ef">in&lt;/span> $runningvm) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Start-VM $Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">do&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $network = get-vm -name $name | get-VMNetworkAdapter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Progress -Activity &lt;span style="color:#e6db74">&amp;#34;Waiting for VM Network&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">until&lt;/span> ($network.Status &lt;span style="color:#f92672">-eq&lt;/span> &lt;span style="color:#e6db74">&amp;#34;ok&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Wait for the VM and sleep for 60 seconds for next vm to start ( boot storm if all VMs are started at once)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sleep -seconds &lt;span style="color:#ae81ff">60&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># send a webhook to Teams to notify that the VMs have been started&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$webhookUri = &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$body = @{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;@context&amp;#34;&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;http://schema.org/extensions&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;@type&amp;#34;&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;MessageCard&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;themeColor&amp;#34;&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;d70000&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;title&amp;#34;&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;Send Webhook to Teams&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;text&amp;#34;&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;This is a message sent from Powershell&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Invoke-RestMethod -Uri $webhookUri -Method Post -Body (ConvertTo-Json -InputObject $body) &lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0">
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
>
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4">&lt;/div>
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>Updating a standalone Hyper-V host can be a complex and time-consuming process, but with Azure Arc and Automation Accounts, you can automate much of the work and ensure a smooth, reliable update process. Hyper-v cluster or HCI is a different story.
{: .prompt-info }&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://lubenz007.github.io/bensiegils/assets/img/blog/before.png" alt="Desktop View" loading="lazy" />&lt;/p></description></item></channel></rss>